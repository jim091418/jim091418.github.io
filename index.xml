<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jim Tang Blog</title>
    <link>https://jim091418.github.io/</link>
    <description>Recent content on Jim Tang Blog</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 06 Nov 2024 22:22:13 -0500</lastBuildDate>
    <atom:link href="https://jim091418.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web_fuzz</title>
      <link>https://jim091418.github.io/htb/web_fuzz/</link>
      <pubDate>Wed, 06 Nov 2024 22:22:13 -0500</pubDate>
      <guid>https://jim091418.github.io/htb/web_fuzz/</guid>
      <description>Directory and File Fuzzing Web Fuzz是很重要的東西，在列舉出一些有漏洞的問題前(包含自動化工具)，第一步驟全都是做Fuzz，通常會需要列舉的是:&#xA;敏感資訊(Sensitive Data):通常是.bak、web.config、.git、個人用戶資料&#xA;版本資訊(Outdated Content):版本資訊，常見的是wordpress。&#xA;測試資源(Devlopement Resource):測試網頁、管理後台&#xA;隱藏資源(Hidden Function):可能是新增、管理User等等，廠商沒把它做好權限控管&#xA;下面是常見的字典表:&#xA;/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt:這是我最常用的字典檔案，不會太多或太少，通常這個字典檔案沒有我就不會再繼續測試了&#xA;/usr/share/wordlists/seclists/Discovery/Web-Content/common.txt:大約5000多條的列舉，少用&#xA;/usr/share/wordlists/seclists/Discovery/Web-Content/raft-large-directories.txt:針對常見目錄的列舉&#xA;/usr/share/wordlists/seclists/Discovery/Web-Content/big.txt :很大量的，如果確定要使用列舉來解決，上面medium沒找到，我會使用這個&#xA;列舉可以用很多工具ffuf、gobuseter、dirb&amp;hellip;很多，但因HTB使用ffuf來舉例，我後面所有題目都用ffuf來解題。&#xA;基本用法:&#xA;ffuf -u http://94.237.63.109:43150/webfuzzing_hidden_path/flag/FUZZ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 500 -c -e .html,.txt,.bak,.php&#xA;-u 目標網址，後面記得要加FUZZ，字典檔案都會把它加在上面&#xA;-w 字典檔案&#xA;-t 要跑的threads數量&#xA;-c 高亮模式，我白色看不太習慣，因此都會用這種有特別顏色的&#xA;-e 後面要帶什麼，我上面的範例就是多加.html、.txt這樣&#xA;Hack the Box題目:&#xA;可以使用列舉找到flag.html檔案即可(可以看到他字典檔案的註解也會吃進去，後面會交如何解決)&#xA;Recursive Fuzzing 剛剛那個是單一目錄以及檔案的Fuzz，但是在實際狀況目標通常會隱藏在一些目錄底下(例如:ckeditor.html)，所以會需要Recursive Fuzz，這意思是說假設我發現admin這個目錄，它會自動在Fuzz，admin這目錄，在實際滲透跟打題目這都會是必備需要的參數，很少(甚至沒有)直接碰到有問題的目標的!&#xA;ffuf用法如下:&#xA;ffuf -u http://94.237.59.237:43171/recursive_fuzz/FUZZ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -recoursion -ic -v&#xA;-recoursion就跟他名稱一樣，recoursion fuzz&#xA;-ic 剛剛有很多註解他都算是200，如果沒有這個-ic他會把那些註解都一起recoursioin fuzz，所以需要加這參數，他會忽略註解&#xA;-v 比原本在更詳細顯示資料&#xA;Hack the Box題目:&#xA;Fuzz到以下目錄，直接看網頁即可得到flag</description>
    </item>
    <item>
      <title>場次2</title>
      <link>https://jim091418.github.io/taccst/2/</link>
      <pubDate>Wed, 30 Oct 2024 06:13:15 -0400</pubDate>
      <guid>https://jim091418.github.io/taccst/2/</guid>
      <description>事前聲明 因為本人金魚腦，因此希望能用個記事來記錄曾經滲透過的經驗，標題順序並非個人檢測場次的順序，想到就寫。&#xA;事前Recon 旁系網站很多，使用subfinder有找到大量測試標的物 因有測試單位的IP範圍，使用httpx找，也有找到大量測試目標物 測試單位前端應該有防護，因此自動化程式(nuclei、sqlmap、dalfox都有試過)皆無法使用，因此我目標設定為以下 Wordpress LFI，參數是src、file..的網頁 有下載點，看是否能跨權下載 本來想找是否能跨權下載的，找到另一個特別的漏洞，可以修改網頁下載次數的，他網頁顯示的方式為 src=https://jim091418.github.io/file/img/xxxxxxxxxx, 13，並且使用base 64編碼，使用cyberchef把13改為任一數字後可以修改他的下載次數，沒啥用的漏洞，但還是可能會造成低的危害，例如:有無聊人士直接把所有數字改為8787或是很長的數字串，都會有入侵過的痕跡，影響聲譽 找尋可以儲存輸入文字的地方，例如搜尋欄、留言&amp;hellip;，找XSS注入點 帳號密碼測試核心系統皆沒問題! 滲透當天 這次看到測試目標物還挺多的，而且有較高級的系統，原本以為會不好打，但實際打完後，還是找到滿多問題的，而且這次是唯一一次可以跟夥伴一起開心宵夜，平常都是第一天去還有一些東西沒找到，回去還要惡補，這次相比於之前真得輕鬆一點。&#xA;SQL Injection&#xA;這個我本來沒有想找，因為以經驗來說，已經比較少單位有這漏洞了，所以我一開始是忽略這個，但後面有發現其他人有找到這個問題，我就想說可能這單位還沒有注意，就對我負責的系統下 --crawl=2 --form --cookie=&#39;xxxxx&#39; 過一陣子就抓到洞了，還不用手動測試!&#xA;XSS&#xA;這部分是當天比較認真測試的，我這次有負責兩個系統，但A系統很快就發現SQLi了，並且B系統的等級也是比較高，因此都在測試B系統的XSS，不過在測試的時候因為是測試機，應該有一些東西跟正式機有點不一樣，我下到某一些Payload就500(interanl error)，感覺是有觸發到，但是沒辦法驗證&amp;hellip;，後面有發現可以填寫個人網址的地方，就用很經典的偽協議javascript:alert(1) 成功觸發!&#xA;權限跨越&#xA;這個也是很常見的問題，在測試的時候就打開兩邊不同權限的帳號，看看哪邊不一樣，很快就有找到可以跨權下載的問題。&#xA;API測試&#xA;這個是比較特別的，通常我比較少做API測試，因為時間少+上不太熟悉QAQ，這次時間比較充裕，並且單位剛好有API，就想說來挑戰看看，一開始因他有/api這個目錄，我是先使用目錄遍歷，看是否有createuser、deleteuser類似這樣簡單的漏洞利用，但因為是大廠商，果然沒有這問題，後來是將一些api截錄下來，看是否有injection的問題，結果也沒有。當準備放棄的時候，我去try他的方法，竟然裡面有delete，我就將原先PUT的改為delete，結果正常刪除!剛好他的PUT方法很簡單，都是PUT /api/conent/1，後面才是json檔案的，但delete他只要知道api/content/x即可，因此我可以用這個api將所有文章刪除，順利找到一個api漏洞!&#xA;心得 這次真的輕鬆很多，因為這次單位是第一次做，所以可以感覺到問題有稍微比較好找一點。這次有順利挑戰API，但因正式機，我不太敢下太侵略的語法，不然我覺得會有更大危害的漏洞，不過有找到問題點了，剩下就交給廠商自行去找哈哈。</description>
    </item>
    <item>
      <title>Sqlmapapi_tools</title>
      <link>https://jim091418.github.io/posts/sqlmapapi_tools/</link>
      <pubDate>Wed, 18 Sep 2024 04:36:47 -0400</pubDate>
      <guid>https://jim091418.github.io/posts/sqlmapapi_tools/</guid>
      <description>為何做這工具 每次在hitcon zeroday看的時候，都會發現某些人特別會尋找sqli，點進去看其實都是同一個injection點，因此我在想應該是使用google hacking(google dork)去爬的，之後再丟到sqlmap去找，是知道sqlmap有一個參數-m是可以跑大量url的，但是他會一條一條url去跑，不會跑threads，因此速度非常慢，因錯陽差的情況下看到了sqlmapapi這工具，突然像是發現新大陸，50條url不用5分鐘就可以全部跑完。</description>
    </item>
    <item>
      <title>Taccst_scan</title>
      <link>https://jim091418.github.io/posts/taccst_scan/</link>
      <pubDate>Wed, 18 Sep 2024 04:05:54 -0400</pubDate>
      <guid>https://jim091418.github.io/posts/taccst_scan/</guid>
      <description>為何做這工具 基本上在所有滲透都需先進行Port掃描，並且滲透報告上都會需要，因此想說寫個一鍵腳本來快速完成，腳本如下:&#xA;#!/bin/bash # 請求用戶輸入目標 IP 地址 read -p &amp;#34;請輸入目標 IP 地址: &amp;#34; ip # 執行端口掃描，並將結果保存到 portscan.txt 文件中 echo &amp;#34;正在Port掃描...&amp;#34; nmap -A $ip -oN portscan.txt # 執行 TCP SYN 掃描，並將結果保存到 tcpsynscan.txt 文件中 echo &amp;#34;正在執行 TCP SYN 掃描...&amp;#34; nmap -sS $ip -oN tcpsynscan.txt # 執行 UDP 掃描，並將結果保存到 udpscan.txt 文件中 echo &amp;#34;正在執行 UDP 掃描...&amp;#34; nmap -sU $ip -oN udpscan.txt echo &amp;#34;掃描完成！&amp;#34; 將上面的程式碼複製下來後，即可使用，但其實比較常使用到的會是-sC來查詢是否有有問題的服務or-sV去確認服務版本，上面在實戰通常只是看有沒有奇怪的Port(大部分不會有)，以及寫報告用(重點)。</description>
    </item>
    <item>
      <title>場次1</title>
      <link>https://jim091418.github.io/taccst/1/</link>
      <pubDate>Fri, 13 Sep 2024 06:13:15 -0400</pubDate>
      <guid>https://jim091418.github.io/taccst/1/</guid>
      <description>事前聲明 因為本人金魚腦，因此希望能用個記事來記錄曾經滲透過的經驗，標題順序並非個人檢測場次的順序，想到就寫。&#xA;事前Recon 主要網站架構ASP.NET subfinder並未找到太多標的 有幾個旁系網站API並未做好權限控管 大多套件都有更新，只有少數JS未更新至最新版本 大多管理介面有依照防護基準 滲透當天 其實看到主要網站是ASP.NET心理就感覺這場只能寫寫版本過舊or Cookie Header未設定之類的漏洞了，但當天還是有做了一下掙扎，有測試XSS、IDOR、SQLi、CSRF、SSTI、Path Traversal測試。&#xA;XSS&#xA;一開始是使用paraspider抓參數，在使用dalfox去弄，但這樣通常是用網站外面(未登入)，並且有多個重複的注入點，優點就是放著給他跑就好，缺點就是時間很長，但在這一步沒有找到東西。&#xA;後面是使用登陸後的管理者介面在配上Burp Suite+XSS Payload(6xxx多條)有發現一個可以用的，其實當初在手動注入的時候發現網站有block&amp;lt;s、javascript:alert(1)、&amp;lt;img&amp;hellip;etc，再看到有阻擋偽協議的時候，心裡就覺得xss沒啥機會了，但網路上的XSS Payload真的很厲害，裡面當中真的就有一條可以bypass，並且是我沒有看過的方式。在最後的時候就靠著這條Payload打到一個Dom XSS。 IDOR&#xA;本來在找是否有id=1或是downloadfile=1這種，有找到download的注入點，但使用chatgpt寫了一個腳本後，只下載到一堆合法的資料，並未有任何收穫。後續有把管理者的介面網址貼到使用者權限的瀏覽器上面，並未找到權限設置錯誤的網頁。 SQLi&#xA;看到.NET寫的網頁其實就沒有很想要測試SQLi了，我這個只有使用管理者的cookie去跑crawl=2，並且在外面使用paraspider再搭配sqlmapapi去跑，都沒結果就放棄。 CSRF&#xA;與SQLi一樣，使用Burp Suite有看到.NET內建的CSRF Token，有想說有沒有可能失效(死馬當活馬醫的概念)，測試過一次失敗即放棄。 SSTI&#xA;其實對這個漏洞並沒有很深刻的了解，是有夥伴有在之前有打過成功這個漏洞，在Port Swigger練習過幾題，我在一些地方下一些測試語法{{7*7}}、${7*7}，都沒結果後放棄。 Path Traversal&#xA;這個也基本上必做的，因在旁系網站有找到一些問題，並且有看到這個網站有使用FCKeditor，對著步驟本來想說有機會的，但一樣列舉完沒找到問題即放棄。 心得 這次利用網路上大神的XSS Payload拿到first blood，真的XSS無奇不有，看到成功的Payload才知道有這種組合方式，果然阻擋XSS比較好的方式還是詳盡的CSP+網路上現成的套件，如果自己寫真的無法涵蓋住全部的問題!</description>
    </item>
    <item>
      <title>簡介</title>
      <link>https://jim091418.github.io/about/me/</link>
      <pubDate>Fri, 13 Sep 2024 05:01:32 -0400</pubDate>
      <guid>https://jim091418.github.io/about/me/</guid>
      <description>關於我 嗨，我是目前任職於大同大學圖書資訊處的jimtang，並且也擔任TACCST的檢測員。在學期間就有碰觸資安相領域，喜歡接觸新的東西，並且將它自動化(or半自動)，在學習的路上遇過很多大神，希望有朝一日可以向這些大神一樣!!&#xA;競賽經驗 2020金盾入圍決賽 教育體系攻防演練佳作(1重大衝擊性、5高衝擊性、1中衝擊性、5低衝擊性) 計劃案 (1)國家實驗研究院國家高速網路與計算中心委託案 計畫項目1：資訊安全基礎入門課程教材 計畫項目2：物聯網設備資安漏洞技術報告 計畫項目3：銀行場域漏洞靶機建置 計畫項目4：車聯網場域漏洞靶機建置 (2)大同公司產學案 計畫名稱：工業物聯網資安管理之研究 </description>
    </item>
    <item>
      <title>Agent Sudo</title>
      <link>https://jim091418.github.io/thm/agent_sudo/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/agent_sudo/</guid>
      <description>Agent Sudo environment KALI Linux 10.10.128.188&#xA;TARGET 10.10.231.25&#xA;Enumerate How many open ports? 有多少開放PORT，直接使用NMAP來掃PORT即可得出答案，可從圖片確認有21、22、80&#xA;nmap -A 10.10.231.25 How you redirect yourself to a secret page? 看到80Port習慣先用nmap確認一下http是否有藏甚麼資訊，在圖片中沒看到有用的資訊QQ&#xA;nmap -p80 --script http-enum 10.10.231.25 接著直接上網站確認，網站上面說使用自己的User-Agent來登入此網站，可以使用curl -A 來偽造User-Agent&#xA;What is the agent name? 從第二題題目似乎有需要redirect+User-agent，用help來確認能有甚麼指令&#xA;我們確認網站可以使用target靶機ip，user-agent要使用他們的代號，可以從剛剛確認他們有一個代號R的，首先帶入!從圖片第一句 當中可以發現他們應該是使用A-Z來做代號，接著就是是看A-Z&#xA;curl -A &amp;#34;R&amp;#34; -L 10.10.231.25 測到C的時候發現R寫給Chris(Agent C)的信，R叫C趕快跟J說換掉他的破密碼&#xA;Hash cracking and brute-force FTP password 這邊題目直接說brute-force了，那就可以直接暴力破解，user就直接用上面所知道的chris，密碼字典檔就使用kali自帶的rockyou.txt&#xA;hydra -l chris -P /usr/share/wordlists/rockyou.txt ftp://10.10.231.25 Zip file password 登入ftp&#xA;ftp -4 10.10.231.25 裡面有3個檔案 全都下載下來，並離開</description>
    </item>
    <item>
      <title>Anonumous</title>
      <link>https://jim091418.github.io/thm/anonymous/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/anonymous/</guid>
      <description>Anonumous PWN Enumerate the machine. How many ports are open? As always, we can use namp to enumerate open ports.&#xA;nmap -sV -sC 10.10.11.170 Starting Nmap 7.60 ( https://nmap.org ) at 2022-11-04 06:15 GMT Nmap scan report for ip-10-10-11-170.eu-west-1.compute.internal (10.10.11.170) Host is up (0.0010s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later | ftp-anon: Anonymous FTP login allowed (FTP code 230) &amp;lt;---can use anonymous login!</description>
    </item>
    <item>
      <title>Bounty Hacker</title>
      <link>https://jim091418.github.io/thm/bounty_hacker/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/bounty_hacker/</guid>
      <description>Bounty Hacker environment KALI Linux ip 10-10-144-240&#xA;TARGET 10.10.215.4&#xA;Oh no! We&amp;rsquo;ve been hacked! Who wrote the task list? FTP用anonymous登入即可獲得檔案 What service can you bruteforce with the text file found? ssh，nmap只有ftp、ssh、http What is the users password? 剛剛FTP中獲取LIN跟一個LOCK.TXT，LOCK.TXT當字典用HYDRA破解即可 user.txt 登入後CAT user.txt root.txt sudo -l可以看到tar有root權限，在google搜尋privilege tar root，即有相關方法，得到後cat /root/root.txt即可 </description>
    </item>
    <item>
      <title>Cyborg</title>
      <link>https://jim091418.github.io/thm/cyborg/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/cyborg/</guid>
      <description>Cyborg environment KALI Linux ip 10.10.144.240&#xA;TARGET 10.10.221.58&#xA;Compromise the System Scan the machine, how many ports are open? nmap起手&#xA;nmap -sV 10.10.221.58 What service is running on port 22? 如圖ssh What service is running on port 80? 如圖http What is the user.txt flag? 先用nmap掃是否有其他網頁&#xA;nmap -p80 --script http-enum 10.10.221.58 可以先從/admin開始看，裡面可以找到以下資訊，主要是說這個管理員掛不起來squid proxy，然後說music_archive他很確定很安全，因此 music_archive應該是滿重要的東西&#xA;從/etc看裡面有一個passwdd，然後有看到music_archive這關鍵字，後面是一段hash&#xA;先使用hash-identifier確認加密方式(https://github.com/blackploit/hash-identifier)&#xA;等等會使用hashcat密碼破解，需先確認md5(APR)代號是多少(https://hashcat.net/wiki/doku.php?id=example_hashes)&#xA;先將剛剛的hash存成hash.txt，如果沒注意到crack的密碼，密碼會存在~/.hashcat/hashcat.potfile裡面&#xA;hashcat --force -a 0 -m 1600 hash.txt /usr/share/wordlists/rockyou.txt 總結一下目前獲得資訊music_archive squidward&#xA;接著從他admin網頁可以下載一個檔案，解壓縮後裡面有這些檔案&#xA;README說這是一個borg backup檔案</description>
    </item>
    <item>
      <title>DogCat</title>
      <link>https://jim091418.github.io/thm/dogcat/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/dogcat/</guid>
      <description>DOGCAT FLAG1 First, I press F12 want to find any clue, but I don&amp;rsquo;y find.&#xA;Seccond, I press DOG and CAT button, I got a lot cute picture, and I know view only allow dog or cat word. Now I try php wraper to take web code.&#xA;http://10.10.162.32//?view=php://filter/convert.base64-encode/resource=dog Got a text base on base64. Decode, and then we know cute picture will be readomly picked out of ten.&#xA;Now, we try to take /etc/passwd</description>
    </item>
    <item>
      <title>h4cked</title>
      <link>https://jim091418.github.io/thm/h4cked/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/h4cked/</guid>
      <description>h4cked environment KALI Linux ip 10.10.136.98&#xA;TARGET 10.10.194.25&#xA;Oh no! We&amp;rsquo;ve been hacked! The attacker is trying to log into a specific service. What service is this? 隨便往下滑，即可知道在FTP-Brute-Force&#xA;There is a very popular tool by Van Hauser which can be used to brute force a series of services. What is the name of this tool? Hydra，這題直接直覺猜的，因為5碼還有基本上都是用這工具xD&#xA;The attacker is trying to log on with a specific username. What is the username?</description>
    </item>
    <item>
      <title>Mr.Robot CTF</title>
      <link>https://jim091418.github.io/thm/mr_robot/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/mr_robot/</guid>
      <description>Mr.Robot CTF environment KALI Linux ip 10.10.228.21&#xA;TARGET 10.10.106.11&#xA;Hack the machine key1 First,use nmap to confirm which port is open nmap -sV -sC 10.10.106.11 We know that port 80 443 is open, we can check port 80 and 443 .&#xA;http://10.10.106.11,we got like hacker command line interface,but that just say why Mr.Robo hacker billionaire.&#xA;I think that can use nmap to scan http&#xA;nmap -p80 --script http-enum 10.10.106.11 We got some page information,first,I visit robots.</description>
    </item>
    <item>
      <title>Revenge</title>
      <link>https://jim091418.github.io/thm/revenge/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/revenge/</guid>
      <description>Revenge Learning how to find sqli entry point exploit sql by sqlmap privilege escalation by systemctl brute force ssh crack by hydra Revenge! flag1&#xA;nmap to scan target,and we know port 22 and 80 open. Starting Nmap 7.60 ( https://nmap.org ) at 2022-11-22 04:58 GMT Nmap scan report for ip-10-10-68-32.eu-west-1.compute.internal (10.10.68.32) Host is up (0.021s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.</description>
    </item>
    <item>
      <title>Simple CTF</title>
      <link>https://jim091418.github.io/thm/simple_ctf/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/simple_ctf/</guid>
      <description>Simple CTF environment KALI Linux ip-10-10-10-219&#xA;TARGET 10.10.158.21&#xA;Simple CTF How many services are running under port 1000? EZ,NAMP掃描，&#xA;nmap -sV 10.10.158.21 What is running on the higher port? 從namp看到是2222 ssh&#xA;What&amp;rsquo;s the CVE you&amp;rsquo;re using against the application? 這題感覺有點怪，他3個PORT都有CVE，但題目這邊要的是80PORT上面有跑一個SIMPLE網頁，裡面有一個CSMS的漏洞 具體如下操作如下，先使用gobuster確認網頁&#xA;先使用gobuster來測試&#xA;gobuster dir -u http://10.10.158.21 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt 發現有simple 301&#xA;接著這邊有看到CMS Made Simple v 2.2.8可以利用這個來看有沒有CVE漏洞&#xA;To what kind of vulnerability is the application vulnerable? 此是利用SQL INJECTION，題目題是****，結果試了很久，才知道答案是縮寫SQLi&amp;hellip;&#xA;What&amp;rsquo;s the password? 利用剛剛找的PYTHON，我是使用python3的腳本(https://github.com/4nner/CVE-2019-9053 )</description>
    </item>
    <item>
      <title>Tomghost</title>
      <link>https://jim091418.github.io/thm/tomghost/</link>
      <pubDate>Thu, 12 Sep 2024 23:14:19 -0400</pubDate>
      <guid>https://jim091418.github.io/thm/tomghost/</guid>
      <description>tomghost environment KALI Linux ip 10.10.214.53&#xA;TARGET 10.10.94.155&#xA;Flags Compromise this machine and obtain user.txt First step, we namp scan which port are open and vulnerability&#xA;nmap -sV -sC 10.10.94.155 We know port 22 53 8009 8080 are open&#xA;Now we visit 8080 page, and enumerate it.&#xA;Enumerate web page&#xA;In short , we got Apache Tomcat V9.0.30 and /examples. These two points seems to be injection.&#xA;Now we search vulnerability on google.</description>
    </item>
  </channel>
</rss>
